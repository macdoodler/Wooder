// This file contains the types used throughout the application

// Interface for stock dimensions
export interface Stock {
  length: number;
  width: number;
  quantity: number;
}

// Interface for required part dimensions
export interface Part {
  length: number;
  width: number;
  quantity: number;
}

// Interface for free space in a stock
export interface FreeSpace {
  x: number;
  y: number;
  width: number;
  height: number;
  stockIndex: number;
}

// Interface for part placement in a stock
export interface Placement {
  partIndex: number;
  instanceIndex: number;
  x: number;
  y: number;
  width: number;
  height: number;
  rotated: boolean;
}

// Interface for a stock usage in the results
export interface StockUsage {
  stockIndex: number;
  placements: Placement[];
  freeSpace: FreeSpace[];
}

// Interface for calculation results
export interface Results {
  usages: StockUsage[];
  unusedParts: { partIndex: number; quantity: number }[];
  wastePercentage: number;
  totalStockArea: number;
  usedArea: number;
  wasteArea: number;
}

// Interface for saved calculation in the application
export interface SavedCalculation {
  id: string;
  name: string;
  description: string;
  kerfThickness: number;
  availableStocks: Stock[];
  requiredParts: Part[];
  results: Results | null;
  dateCreated: number;
  dateModified: number;
  userId?: string; // Optional for future multi-user support
}

// Interface for calculations in the database (field names follow SQL conventions)
export interface DbCalculation {
  id: string;
  name: string;
  description: string;
  kerf_thickness: number;
  available_stocks: string; // JSON string
  required_parts: string;   // JSON string
  results: string | null;   // JSON string or null
  date_created: number;
  date_modified: number;
  user_id?: string;        // Optional
}

// Interface for Cloudflare environment
export interface Env {
  DB: any; // D1 database binding
}

// Convert a database calculation to an application calculation
export function dbToAppCalculation(dbCalc: DbCalculation): SavedCalculation {
  return {
    id: dbCalc.id,
    name: dbCalc.name,
    description: dbCalc.description || '',
    kerfThickness: dbCalc.kerf_thickness,
    availableStocks: JSON.parse(dbCalc.available_stocks),
    requiredParts: JSON.parse(dbCalc.required_parts),
    results: dbCalc.results ? JSON.parse(dbCalc.results) : null,
    dateCreated: dbCalc.date_created,
    dateModified: dbCalc.date_modified,
    userId: dbCalc.user_id
  };
}

// Convert an application calculation to a database calculation
export function appToDbCalculation(appCalc: SavedCalculation): DbCalculation {
  return {
    id: appCalc.id,
    name: appCalc.name,
    description: appCalc.description || '',
    kerf_thickness: appCalc.kerfThickness,
    available_stocks: JSON.stringify(appCalc.availableStocks),
    required_parts: JSON.stringify(appCalc.requiredParts),
    results: appCalc.results ? JSON.stringify(appCalc.results) : null,
    date_created: appCalc.dateCreated,
    date_modified: appCalc.dateModified,
    user_id: appCalc.userId
  };
}
